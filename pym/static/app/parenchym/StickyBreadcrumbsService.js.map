{"version":3,"sources":["parenchym/StickyBreadcrumbsService.js"],"names":[],"mappings":"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","file":"parenchym/StickyBreadcrumbsService.js","sourcesContent":["import angular from 'angular';\n\n\nclass StickyBreadcrumbsService {\n    constructor($log, $window) {\n        this.$log = $log;\n        this.$window = $window;\n        this.rc = {\n            selector: '#breadcrumbs',\n            classSticky: 'sticky-breadcrumbs'\n        };\n\n        this.isSticky = false;\n        this.placeholder = undefined;\n        this.exists = false;\n\n        this.elem = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.placeholderWidth = undefined;\n        this.offsetTop = undefined;\n        this.triggerPos = undefined;\n    }\n\n    init() {\n        this.initElem();\n        this.handleEvents();\n    }\n\n    handleEvents () {\n        let win = angular.element(this.$window);\n        win.on('resize', () => this.updatePosition() );\n        win.on('scroll', () => this.onScroll(win.scrollTop()) );\n        // init\n        this.updatePosition();\n        this.onScroll(win.scrollTop());\n    }\n\n    onScroll(scrollTop) {\n        if (scrollTop > this.triggerPos) {\n            this.stick();\n        }\n        else {\n            this.unstick();\n        }\n    }\n\n    updatePosition() {\n        this.placeholderWidth = this.placeholder.outerWidth();\n        if (this.isSticky) {\n            this.elem.css({ width: this.placeholderWidth });\n        }\n    }\n\n    initElem() {\n        let elem = angular.element(document).find(this.rc.selector);\n        if (elem.length) {\n            this.exists = true;\n            this.elem = elem;\n            this.height = elem.height();\n            this.width = elem.width();\n            this.offsetTop = elem.offset().top;\n            this.triggerPos = this.offsetTop;\n            this.createPlaceholder();\n        }\n    }\n\n    createPlaceholder() {\n        this.placeholder = angular.element('<div style=\"display: none; width: 100%;\"></div>');\n        this.placeholder.css({\n            height: this.elem.outerHeight()\n        });\n        this.placeholderWidth = this.placeholder.outerWidth();\n        this.placeholder.insertBefore(this.elem);\n        angular.element(this.$window).on('resize',\n                                          () => { this.updatePosition(); });\n    }\n\n    stick() {\n        if (! this.exists) {\n            this.$log.error('Breadcrumbs element not found');\n            return;\n        }\n        if (! this.isSticky) {\n            this.isSticky = true;\n            this.elem.addClass(this.rc.classSticky);\n            this.placeholder.show();\n            this.updatePosition();\n        }\n    }\n\n    unstick() {\n        if (! this.exists) {\n            this.$log.error('Breadcrumbs element not found');\n            return;\n        }\n        if (this.isSticky) {\n            this.isSticky = false;\n            this.elem.removeClass(this.rc.classSticky);\n            this.placeholder.hide();\n            this.elem.css({ width: '' });\n        }\n    }\n\n    static serviceFactory(...all) {\n        return new StickyBreadcrumbsService(...all);\n    }\n\n}\n\nStickyBreadcrumbsService.serviceFactory.$inject = ['$log', '$window'];\n\nexport default StickyBreadcrumbsService;\n"],"sourceRoot":"/source/"}