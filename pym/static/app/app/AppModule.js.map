{"version":3,"sources":["app/AppModule.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,eAAe,SAAS,cAAc;EAC3C,OAAO;;;AAGT,IAAI,WAAW,QAAQ;;AAEvB,IAAI,YAAY,uBAAuB;;AAEvC,IAAI,mBAAmB,QAAQ;;AAE/B,IAAI,oBAAoB,uBAAuB;;AAE/C,IAAI,iBAAiB,QAAQ;;AAE7B,IAAI,kBAAkB,uBAAuB;;AAE7C,IAAI,cAAc,QAAQ;;AAE1B,IAAI,eAAe,uBAAuB;;AAE1C,IAAI,iBAAiB,QAAQ;;AAE7B,IAAI,kBAAkB,uBAAuB;;AAE7C,IAAI,iBAAiB,QAAQ;;AAE7B,IAAI,kBAAkB,uBAAuB;;AAE7C,IAAI,cAAc,QAAQ;;AAE1B,IAAI,eAAe,uBAAuB;;AAE1C,IAAI,iBAAiB,QAAQ;;AAE7B,IAAI,kBAAkB,uBAAuB;;AAE7C,IAAI,OAAO,QAAQ;;AAEnB,IAAI,mBAAmB,QAAQ;;AAE/B,SAAS,uBAAuB,KAAK,EAAE,OAAO,OAAO,IAAI,aAAa,MAAM,EAAE,SAAS;;;;;;;;;;;;;;;;;;;;;;AAPvF,SAAS,OAAO,UAAU,eAAe,kBAAkB,mBAAmB;;;;;;;EAO1E,cAAc,SAAS,QAAQ,OAAO,sBAAsB;;;;;;;;;;;;;;;EAe5D,kBAAkB,UAAU,OAAO,WAAW;;;;;AAElD,OAAO,UAAU,CAAC,YAAY,iBAAiB,oBAAoB;;AAGnE,SAAS,IAAI,gBAAgB;AAE7B,IAAI,UAAU,CAAC;;AAGf,IAAM,UAAS,UAAA,QAAQ,OAAO,OAAO,CAC7B,gBAAA,QAAiB,MACjB,kBAAA,QAAU,MACV,aAAA,QAAc,MACd,gBAAA,QAAiB,MACjB,gBAAA,QAAiB,OAEpB,OAAO,QACP,IAAI,KAEJ,QAAQ,kBAAkB,aAAA,QAAW,gBACrC,WAAW,qBAAmB,gBAAA,SAE9B,WAAW,iBAAe,KAnEtB,eAoEJ,UAAU,UAAU,iBAnEhB,gBAmEgC;;AAiBzC,QAAQ,UAbO,QAAM","file":"app/AppModule.js","sourcesContent":["import angular from 'angular';\n\n// From Parenchym\nimport PymModule from '../parenchym/ParenchymModule';\nimport PymGrowlerModule from '../parenchym/growler/GrowlerModule';\nimport PymTreeModule from '../parenchym/tree/TreeModule';\nimport PymStorageModule from '../parenchym/storage/StorageModule';\nimport PymDialogsModule from '../parenchym/dialogs/DialogsModule';\n// General\nimport AppService from './AppService';\nimport AppController from './AppController';\n\n// Misc\nimport { FooController } from '../foo';\nimport { FooBarDirective } from '../fooBarDirective';\n\n\n///**\n// * Intercept HTTP errors to growl\n// */\n//// WTF: Cannot use growler, because growler has a template and template cache needs $http, so angular complains about circular dependency\n////function PymHttpErrorInterceptor($q, growler) {\n//function PymHttpErrorInterceptor($q, $log) {\n//    return {\n//        responseError: function (rejection) {\n//            //growler.error(rejection.statusText, rejection.status);\n//            $log.error(rejection.statusText, rejection.status);\n//            return $q.reject(rejection);\n//        }\n//    };\n//}\n////PymHttpErrorInterceptor.$inject = ['$q', 'pym.growler.service'];\n//PymHttpErrorInterceptor.$inject = ['$q', '$log'];\n\n\nfunction config($provide, $httpProvider, $compileProvider, $locationProvider) {\n    //$provide.factory('PymHttpErrorInterceptor', PymHttpErrorInterceptor);\n    //$httpProvider.interceptors.push('PymHttpErrorInterceptor');\n\n    /**\n     * Re-enable the XMLHttpRequest header\n     */\n    $httpProvider.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n    /**\n     * Disable debug data\n     *\n     * Re-enable in a debug console with:\n     *\n     *     angular.reloadWithDebugInfo();\n     *\n     * See https://docs.angularjs.org/guide/production\n     */\n    // WTF: Need debug info because of ui-tree: https://github.com/angular-ui-tree/angular-ui-tree/issues/403\n    //$compileProvider.debugInfoEnabled(false);\n\n    // NO ! HTML5 Routing\n    $locationProvider.html5Mode(false).hashPrefix('!');\n}\nconfig.$inject = ['$provide', '$httpProvider', '$compileProvider', '$locationProvider'];\n\n\nfunction run($templateCache) {\n}\nrun.$inject = ['$templateCache'];\n\n\nconst module = angular.module('app', [\n        PymGrowlerModule.name,\n        PymModule.name,\n        PymTreeModule.name,\n        PymStorageModule.name,\n        PymDialogsModule.name\n    ])\n    .config(config)\n    .run(run)\n\n    .service('app.AppService', AppService.serviceFactory)\n    .controller('app.AppController', AppController)\n\n    .controller('FooController', FooController)\n    .directive('fooBar', FooBarDirective.directiveFactory)\n    ;\n\n\nexport default module;\n"],"sourceRoot":"/source/"}